- name: make sure docker connection is configured
  assert:
    that: "{{ hostvars[item].ansible_connection == 'docker' }}"
    msg: test playground hosts must have ansible_connection=docker
  loop: "{{ query('inventory_hostnames', test_playground_hosts) }}"

- name: create test playground networks
  docker_network:
    name: "{{ item.name }}"
    state: present
  loop: &network_loop "{{
    test_playground_networks|
    union(
      query('inventory_hostnames', test_playground_hosts)|
      map('extract', hostvars)|
      selectattr('test_playground_networks', 'defined')|
      map(attribute='test_playground_networks')|
      list
    )|
    unique
  }}"
  when:
    - test_playground_state != 'absent'

- name: enforce test playground container state
  docker_container:
    devices: "{{ item.test_playground_devices|d(test_playground_devices) }}"
    image: "{{ item.test_playground_image|d(test_playground_image) }}:
            {{- item.test_playground_tag|d(test_playground_tag) }}"
    name: "{{ item.inventory_hostname }}"
    # HACK https://github.com/ansible/ansible/issues/45486
    networks: "{{
      item.test_playground_networks|d(test_playground_networks)
      if item.test_playground_state|d(test_playground_state) != 'absent'
      else []
     }}"
    privileged: true
    purge_networks: true
    state: "{{ item.test_playground_state|d(test_playground_state) }}"
    volumes:
      "{{ ['/sys/fs/cgroup:/sys/fs/cgroup:ro'] +
          item.test_playground_volumes|d(test_playground_volumes) }}"
    tmpfs:
      - /run
      - /run/lock
      - /tmp
  loop: "{{
    query('inventory_hostnames', test_playground_hosts)|
    map('extract', hostvars)|list
  }}"

- name: delete test playground networks
  docker_network:
    name: "{{ item.name }}"
    state: absent
  loop: *network_loop
  when:
    - test_playground_state == 'absent'
